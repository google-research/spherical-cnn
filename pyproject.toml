[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "spherical_cnn"
description = "JAX library for implementing spherical CNNs, accompanying the research paper Scaling Spherical CNNs, ICML'23."
readme = "README.md"
# TODO(machc) This uses a grain-nightly version that is compiled for
# python 3.10. This can probably be relaxed once there is a proper
# grain release.
requires-python = "~=3.10"
license = {file = "LICENSE"}
authors = [{name = "spherical_cnn authors", email="spherical_cnn@google.com"}]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = []

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
    "clu==0.0.9",
    "dill==0.3.7",
    "einshape==1.0",
    "importlib-resources==6.0.1",
    "flax==0.7.0",
    "jax==0.4.14",
    "jaxlib==0.4.14",
    # Later versions seem to require Python 3.9.
    "optax==0.1.7",
    "pandas==1.3.4",
    "scipy==1.11.1",
    "spherical==1.0.13",
    "sympy==1.12",
    "tensorflow==2.13.0",
    "tensorflow-datasets==4.9.4",
    "zipp==3.16.2",
    # These are required for the weather experiments.
    "dask==2024.1.0",
    "gcsfs==2023.12.2.post1",
    "grain==0.2.0",
    "immutabledict==4.1.0",
    "xarray==2023.1.0",
    "zarr==2.16.1",
]

# `version` is automatically set by flit to use `spherical_cnn.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google-research/spherical-cnn"
repository = "https://github.com/google-research/spherical-cnn"
changelog = "https://github.com/google-research/spherical-cnn/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
preview = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
